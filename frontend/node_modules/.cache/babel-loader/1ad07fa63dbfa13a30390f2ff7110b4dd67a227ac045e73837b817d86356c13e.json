{"ast":null,"code":"var _jsxFileName = \"/Users/doeunkwon/Downloads/software/projects/Convo/web/convo/src/pages/Waitlist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Waitlist.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faEnvelope } from '@fortawesome/free-regular-svg-icons';\nimport TextField from '../components/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Waitlist = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleSubmit = async () => {\n    if (!name || !email) {\n      alert('Please enter both name and email.');\n      return;\n    }\n    setIsSubmitting(true);\n    const scriptURL = 'https://script.google.com/macros/s/AKfycbwJEOhFDOiqmVsWRnzMfPe4MOV86aEMGxZnrQ-jTFLETF2gf95gge4MyXC0OueBgzA/exec';\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    try {\n      const response = await fetch(scriptURL, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log(result);\n      if (result.result === 'success') {\n        alert('Thanks for joining our waitlist!');\n        setName('');\n        setEmail('');\n      } else {\n        throw new Error(result.message || 'Unknown error occurred');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred. Please try again later.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Waitlist\",\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"waitlist-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"waitlist-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Together, let's get people chatting again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Join the waitlist to get early access and bring conversations back into daily life.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"waitlist-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 31\n          }, this),\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faEnvelope\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 31\n          }, this),\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Joining...' : \"Join the waitlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"@2024 Convo | All rights reserved\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}, \"6sIqT3OUO1Z0A/1tq8kBHAWlpfo=\")), \"6sIqT3OUO1Z0A/1tq8kBHAWlpfo=\");\n_c2 = Waitlist;\nexport default Waitlist;\nvar _c, _c2;\n$RefreshReg$(_c, \"Waitlist$React.forwardRef\");\n$RefreshReg$(_c2, \"Waitlist\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faUser","faEnvelope","TextField","jsxDEV","_jsxDEV","Waitlist","_s","forwardRef","_c","props","ref","name","setName","email","setEmail","isSubmitting","setIsSubmitting","handleSubmit","alert","scriptURL","formData","FormData","append","response","fetch","method","body","ok","Error","status","result","json","console","log","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","placeholder","value","onChange","e","target","onClick","disabled","_c2","$RefreshReg$"],"sources":["/Users/doeunkwon/Downloads/software/projects/Convo/web/convo/src/pages/Waitlist.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Waitlist.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faEnvelope } from '@fortawesome/free-regular-svg-icons';\nimport TextField from '../components/TextField';\n\nconst Waitlist = React.forwardRef((props, ref) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const handleSubmit = async () => {\n        if (!name || !email) {\n            alert('Please enter both name and email.');\n            return;\n        }\n    \n        setIsSubmitting(true);\n        \n        const scriptURL = 'https://script.google.com/macros/s/AKfycbwJEOhFDOiqmVsWRnzMfPe4MOV86aEMGxZnrQ-jTFLETF2gf95gge4MyXC0OueBgzA/exec';\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('email', email);\n        \n        try {\n            const response = await fetch(scriptURL, {\n                method: 'POST',\n                body: formData,\n            });\n            \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            \n            const result = await response.json();\n            console.log(result);\n            if (result.result === 'success') {\n                alert('Thanks for joining our waitlist!');\n                setName('');\n                setEmail('');\n            } else {\n                throw new Error(result.message || 'Unknown error occurred');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            alert('An error occurred. Please try again later.');\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    return (\n        <main className='Waitlist' ref={ref}>\n            <section className='waitlist-content'>\n                <section className='waitlist-header'>\n                    <h1>\n                        Together, let's get people chatting again.\n                    </h1>\n                    <h3>\n                        Join the waitlist to get early access and bring conversations back into daily life.\n                    </h3>\n                </section>\n                <section className='waitlist-buttons'>\n                    <TextField\n                        icon={<FontAwesomeIcon icon={faUser} />}\n                        placeholder='Name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                    <TextField\n                        icon={<FontAwesomeIcon icon={faEnvelope} />}\n                        placeholder='Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </section>\n                <button onClick={handleSubmit} disabled={isSubmitting}>\n                    {isSubmitting ? 'Joining...' : \"Join the waitlist\"}\n                </button>\n                <p>\n                    @2024 Convo | All rights reserved\n                </p>\n            </section>\n        </main>\n    );\n});\n\nexport default Waitlist;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}